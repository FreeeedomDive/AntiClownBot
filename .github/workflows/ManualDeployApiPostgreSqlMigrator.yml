name: Deploy Api PostgreSql Migrator

on:
  workflow_dispatch:

# Edit only names and variables below, everything is based on this variables
env:
  PROJECT_FOLDER: AntiClown.Api.PostgreSqlMigrationsApplier
  DOCKERFILE: Dockerfile.AntiClown.Api.PostgreSqlMigrationsApplier
  DOCKERIMAGE: anticlownapipostgresql
  K8SFILENAME: k8s_prod/anticlown-api-postgresql-job.yaml
  APPSETTINGS_PRODUCTION_JSON: ${{ secrets.API_POSTGRESQLMIGRATOR_APPSETTINGS }}
  JOBNAME: anticlown-api-postgresql-job

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Recreate appsettings.Production.json
      run: |
        echo "$APPSETTINGS_PRODUCTION_JSON" > ./$PROJECT_FOLDER/appsettings.Production.json

    - name: Configure Docker for Insecure Registry
      env:
        DOCKER_REGISTRY_IP: ${{ secrets.DOCKER_REGISTRY_IP }}
      run: |
        sudo mkdir -p /etc/docker
        echo '{"insecure-registries": ["'$DOCKER_REGISTRY_IP'"]}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker

    - name: Log in to Docker Registry
      env:
        DOCKER_REGISTRY_IP: ${{ secrets.DOCKER_REGISTRY_IP }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_REGISTRY_LOGIN }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login $DOCKER_REGISTRY_IP -u $DOCKER_USERNAME --password-stdin

    - name: Build Docker Image
      env:
        DOCKER_REGISTRY_IP: ${{ secrets.DOCKER_REGISTRY_IP }}
      run: |
        docker build . -f $DOCKERFILE -t $DOCKER_REGISTRY_IP/$DOCKERIMAGE:${GITHUB_SHA}

    - name: Push Docker Image to Registry
      env:
        DOCKER_REGISTRY_IP: ${{ secrets.DOCKER_REGISTRY_IP }}
      run: |
        docker push $DOCKER_REGISTRY_IP/$DOCKERIMAGE:${GITHUB_SHA}

    - name: Replace Placeholders in Kubernetes YAML
      env:
        DOCKER_REGISTRY_DOMAIN: ${{ secrets.DOCKER_REGISTRY_DOMAIN }}
      run: |
        sed -i "s/{{docker_registry_domain}}/$DOCKER_REGISTRY_DOMAIN/g" $K8SFILENAME
        sed -i "s/{{docker_image_version}}/${GITHUB_SHA}/g" $K8SFILENAME

    - name: k8s
      env:
        KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
      run: |
        echo "$KUBECONFIG_CONTENT" > ./kubeconfig.yaml
        export KUBECONFIG=./kubeconfig.yaml
        kubectl apply -f $K8SFILENAME
        kubectl wait --for=condition=complete job/$JOBNAME
        kubectl delete job/$JOBNAME
