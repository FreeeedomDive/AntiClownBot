// <auto-generated />
using System;
using AntiClown.Entertainment.Api.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AntiClown.Entertainment.Api.Core.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230710212422_RaceHelpers")]
    partial class RaceHelpers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AntiClown.Entertainment.Api.Core.AdditionalEventsInfo.Race.Repositories.RaceDriverStorageElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AccelerationSkill")
                        .HasColumnType("double precision");

                    b.Property<double>("BreakingSkill")
                        .HasColumnType("double precision");

                    b.Property<double>("CorneringSkill")
                        .HasColumnType("double precision");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverName");

                    b.ToTable("RaceDrivers");
                });

            modelBuilder.Entity("AntiClown.Entertainment.Api.Core.AdditionalEventsInfo.Race.Repositories.RaceTrackStorageElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccelerationDifficulty")
                        .HasColumnType("integer");

                    b.Property<int>("BreakingDifficulty")
                        .HasColumnType("integer");

                    b.Property<int>("CorneringDifficulty")
                        .HasColumnType("integer");

                    b.Property<int>("IdealTime")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("RaceTracks");
                });

            modelBuilder.Entity("AntiClown.Entertainment.Api.Core.CommonEvents.Repositories.CommonEventStorageElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Finished")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CommonEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
